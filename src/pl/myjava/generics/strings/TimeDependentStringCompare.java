package pl.myjava.generics.strings;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.Random;
import java.util.stream.Collectors;

public class TimeDependentStringCompare {
//	public static final String[] sourceSorted = { "S3CUQ4EM1U65POM5QX", "S3CUTV2YCBXR1NS1TA", "S3CUUT0J5ZAW55RXHJ", "S3CUVOVTJNOECTEDRJ",
//			"S3CY4DX3YIWL15MN3G", "S3CZNTQLCNNTUQOKCW", "S3CZNW09VKVHWZGI32", "S3CZO0NPE4RNALH33M",
//			"S3CZO3G3JP065LXBL7", "S3CZO78J64YSI1RT6J", "S3CZOAFLDYIAZ1C5R0", "S3CZOEMRAFJD9MAPTF",
//			"S3CZOH9OF4ZNIVJQBY", "S3CZOLJA93V24ZKE58", "S3CZOO50ROP0IFTPPD", "S3CZOR0XE7JYIS23X6",
//			"S3CZOVI7NBQO4D4ZCX", "S3CZOYXWLKCLR1AN3K", "S3CZP27I4DEUNWFF5H", "S3CZP58JXKE2C37IAS",
//			"S3CZT8EVBE4JNSPCSP", "S3CZTB58G2J37FJS67", "S3CZTELKWBO7VH85EY", "S3CZTIPR1UZYB4PBRU",
//			"S3CZTLE3BW2SYZ68TC", "S3CZTPAVYNGOR43RM4", "S3CZTS76XDJJOB846K", "S3CZTWR1U7NSN84KDU",
//			"S3CZTZ3QCU3X6GC283", "S3CZU30GB0OD12NN16", "S3CZU6QJ7MAAL9ECND", "S3CZU9797ZHUS997VE",
//			"S3CZUD2Z5N0KU3OVTU", "S3CZUG4GNC3CU3QAC3", "S3CZUKBFJ2J81WQ2O6", "S3CZXGBG9FVXREXB4Y",
//			"S3CZXJ5NDFPJ7AEI8W", "S3CZXNBHI7JKQJGN5S", "S3CZXQR5KSAU70VIU3", "S3CZXT15J801EQ91XP",
//			"S3CZXXAFKZGDJPKWNU", "S3CZY085CLFUHKM5AS", "S3CZY4T0BXYAPPU3NE", "S3CZY7P994SKZA41FN",
//			"S3CZYBNWY8K4MQXU7A", "S3CZYEJ26TF095UDT6", "S3CZYI3B21AXLRY73Y", "S3CZYLM7WIP66XUUI8",
//			"S3CZYPLR20K28WHM66", "S3CZYSJ61BK9QZKKGR", "S3D03YN4OOZWLT5AU3", "S3D042AFYJGV29RZ4L",
//			"S3D045M2FRRMHCPHK4", "S3D049904WV6L56RJF", "S3D04CT85HZIG2ERR6", "S3D04FOHO14N1Y8GCE",
//			"S3D04JUB6U1JZ0FLFE", "S3D04M99EFRIVUZXAY", "S3D04QBR7WMTTR3KMC", "S3D04TPKYLV4CV4JHC",
//			"S3D04X6ZT9I7K6BU6O", "S3D050XKUQF2KCTUQM", "S3D054FRKGIZAWTRV8", "S3D057HTZY23LN42KN",
//			"S3D05BVX3VDZS261GA" };
//	public static final String[] source = { "S3CUQ4EM1U65POM5QX", "S3CUTV2YCBXR1NS1TA", "S3CUUT0J5ZAW55RXHJ", "S3CUVOVTJNOECTEDRJ",
//			"S3CY4DX3YIWL15MN3G", "S3CZOAFLDYIAZ1C5R0", "S3CZNW09VKVHWZGI32", "S3CZO0NPE4RNALH33M",
//			"S3CZO3G3JP065LXBL7", "S3CZO78J64YSI1RT6J", "S3CZNTQLCNNTUQOKCW", "S3CZOEMRAFJD9MAPTF",
//			"S3CZOH9OF4ZNIVJQBY", "S3CZOLJA93V24ZKE58", "S3CZOO50ROP0IFTPPD", "S3CZOR0XE7JYIS23X6",
//			"S3CZOVI7NBQO4D4ZCX", "S3CZOYXWLKCLR1AN3K", "S3CZP27I4DEUNWFF5H", "S3CZP58JXKE2C37IAS",
//			"S3CZT8EVBE4JNSPCSP", "S3CZTB58G2J37FJS67", "S3CZTELKWBO7VH85EY", "S3CZTIPR1UZYB4PBRU",
//			"S3CZTLE3BW2SYZ68TC", "S3CZTPAVYNGOR43RM4", "S3CZTS76XDJJOB846K", "S3CZTWR1U7NSN84KDU",
//			"S3CZTZ3QCU3X6GC283", "S3CZU30GB0OD12NN16", "S3CZU6QJ7MAAL9ECND", "S3CZU9797ZHUS997VE",
//			"S3CZUD2Z5N0KU3OVTU", "S3CZUG4GNC3CU3QAC3", "S3CZUKBFJ2J81WQ2O6", "S3CZXGBG9FVXREXB4Y",
//			"S3CZY085CLFUHKM5AS", "S3CZXNBHI7JKQJGN5S", "S3CZXQR5KSAU70VIU3", "S3CZXT15J801EQ91XP",
//			"S3CZXXAFKZGDJPKWNU", "S3CZXJ5NDFPJ7AEI8W", "S3CZY4T0BXYAPPU3NE", "S3CZY7P994SKZA41FN",
//			"S3CZYBNWY8K4MQXU7A", "S3CZYEJ26TF095UDT6", "S3CZYI3B21AXLRY73Y", "S3CZYLM7WIP66XUUI8",
//			"S3CZYPLR20K28WHM66", "S3CZYSJ61BK9QZKKGR", "S3D03YN4OOZWLT5AU3", "S3D042AFYJGV29RZ4L",
//			"S3D04FOHO14N1Y8GCE", "S3D049904WV6L56RJF", "S3D04CT85HZIG2ERR6", "S3D045M2FRRMHCPHK4",
//			"S3D04JUB6U1JZ0FLFE", "S3D04M99EFRIVUZXAY", "S3D04QBR7WMTTR3KMC", "S3D04TPKYLV4CV4JHC",
//			"S3D04X6ZT9I7K6BU6O", "S3D050XKUQF2KCTUQM", "S3D054FRKGIZAWTRV8", "S3D057HTZY23LN42KN",
//			"S3D05BVX3VDZS261GA" };
//	public static final String[] sourceSorted = {"S3CUQ4EM1U65POM5QX", "S3EILKH26DGRVQFQFV", "S3EILK7Y2S1VYGL05O", "S5UL85VDE3Z853BE60", "S5UL858XM1LKBETYSK"};
	public static final String[] sourceSorted = {"S5UL85VDE3Z853BE60", "S5UL858XM1LKBETYSK"};
	public static final String[] source = {"S5UL85VDE3Z853BE60", "S5UL858XM1LKBETYSK"};
	
	public static void main(String[] args) {
		String[] newSource = changePlace(source);		
		List<String> output = Arrays.stream(newSource).sorted(compareById()).collect(Collectors.toList());
		
		System.out.println("OUTPUT: SORTED_SOURCE: NEW_SOURCE: IF EQUALS");		
		
		for (int i = 0; i < output.size(); i++) {
			System.out.println(output.get(i) + ": " + sourceSorted[i] + ": " + newSource[i] + ": " + output.get(i).equals(sourceSorted[i]) + ": " + output.get(i).equals(newSource[i]));
		}
	}
	
	public static String[] changePlace(String[] input) {
		String[] result = new String[input.length];
		List<Integer> mem = new ArrayList<>();
		
		for (int i = 0; i < input.length; i++) {
			int tmp = 0;
			
			while (mem.contains(tmp = new Random().nextInt(input.length)));
			
			mem.add(tmp);			
			result[i] = input[mem.get(i)];
		}
		
		return result;
	}
	
    public static Comparator<String> compareById() {
        return (d1, d2) -> {
        	System.out.println("D1: " + d1 + ": D2: " + d2 + ": " + d1.compareTo(d2));
        	

            return d1.compareTo(d2);
        };
    }
}
